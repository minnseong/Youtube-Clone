01/20 2021
Fullstack => backend + frontend

Websites vs Webapps
Websites : 페이지를 방문하면 컨텐츠를 소비 / 정적 / interactive x
ex) 뉴스페이지 레딧 

Webapps : 내가 움직이고 클릭 발견 검사 / 동적 / interactive o
ex) 넷플릭스

우리가 만들 "wetube" - interactive Website

js : 브라우저에 종속되어 있음.
Node.js : js를 브라우저 밖에서 유저가 사용할 수 있도록 한 것.
        : 브라우저가 필요없어 모바일 앱, 어플를 만들 수 있음.

node.js use cases
1. fronted와 backend를 모두 javascript로 만들고 싶을 때
2. django나 python 등을 사용할 수 있으나, 처음에 사용법을 잘 익혀야 해서 시간이 걸림.

01/21 2021
Server = computer => connect internet
software server = 인터넷에 연결된 한 덩어리 코드, 네트워크

Express.js : node.js로 간단하게 서버를 만들 수 있게 해줌 - very stable 
framework : 개발자들이 미리 작성한 많은 코드.

npm : node package manager
json : javascript에서 정보를 담는 방식
terminal에 npm 실행은 폴더안에 package.json이 있어야 함.

< express install >
1. index.js 생성 후
2. terminal에 입력
- node index.js
- npm init => package.json 생성
- npm install express => node_modules, package-lock.json 생성

만약 협업을 할시, index.js와 package.json만 디렉토리에 넣은 후
- npm install 하면 자동으로 아래를 참조해 설치됨.  
"dependencies": {
    "express": "^4.17.1"
  }

TERMINAL, git commit & push
1. git add .
2. git commit -m "commit message"
3. git push origin master

GET : 정보 전달 x
POST : 정보 전달 o

Babel : 최신의 javascript을 예전의 javascript로 변환

babel 설정방법
1. npm install @babel/node
2. @babel/preset-env
3. npm install @babel/preset-env
2. npm install @babel/core

nodemon : 서버 재가동을 편리하게 해줌.

01/24
middleware in express : 처리가 끝날 때까지 연결되어있는 것.
                      : 유저와 마지막 응답 사이에 존재하는 것
                      : express에서 모든 함수가 될 수 있음.
                      : login 여부체크, 파일 전송시 중간에 가르챌 수 있음 
                      : middleware에서 res.send를 하면 연결을 끊을 수 있음.

-> middleware 순서가 매우 중요
Morgan : middleware , logging(무슨일이 어디서 일어났는지 기록)에 도움이 됨.
helmet : middleware, node.js 앱의 보안을 도와줌.
cookie-parser
body-parser

router : route의 복잡함을 쪼개주는데 사용한다.